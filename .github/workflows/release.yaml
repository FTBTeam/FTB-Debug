on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-windows:
    name: Build and release Windows
    runs-on: macos-latest
    strategy:
      matrix:
        goos: [ windows ]
        goarch: [ amd64, arm64 ]
    steps:
      - uses: actions/checkout@v4

      - name: Short SHA
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

      - name: Setup Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
          cache-dependency-path: go.sum

      - name: Install dependencies
        run: |
          go get .

      - name: Run tests
        run: |
          go test ./...

      - name: Build
        run: |
          make build/${{ matrix.goos }}/${{ matrix.goarch }}

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ftb-debug-${{ matrix.goos }}-${{ matrix.goarch }}
          overwrite: true
          path: |
            out/*
  build-linux:
    name: Build and release Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux ]
        goarch: [ amd64, arm64, arm ]
    steps:
      - uses: actions/checkout@v4

      - name: Short SHA
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

      - name: Setup Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
          cache-dependency-path: go.sum

      - name: Install dependencies
        run: |
          go get .

      - name: Run tests
        run: |
          go test ./...

      - name: Build
        run: |
          make build/${{ matrix.goos }}/${{ matrix.goarch }}

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ftb-debug-${{ matrix.goos }}-${{ matrix.goarch }}
          overwrite: true
          path: |
            out/*

  build-macos:
    name: Build and release macOS
    runs-on: macos-latest
    strategy:
      matrix:
        goos: [ darwin ]
        goarch: [ amd64, arm64 ]
    steps:
      - uses: actions/checkout@v4

      - name: Short SHA
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

      - name: Setup Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
          cache-dependency-path: go.sum

      - name: Install dependencies
        run: |
          go get .

      - name: Run tests
        run: |
          go test ./...

      - name: Build
        run: |
          make build/${{ matrix.goos }}/${{ matrix.goarch }}

      - name: Codesign & Notarize
        run: |
#          codesign -s "" -v ./out/ftb-debug-darwin-${{ matrix.goarch }} --options=runtime --timestamp
          codesign -dvv ./out/ftb-debug-darwin-${{ matrix.goarch }}
          zip -r ftb-debug_signed.zip out/ftb-debug-darwin-${{ matrix.goarch }}
          echo "${{secrets.APPLE_API_KEY}}" > apple_api_key.p8
          xcrun notarytool submit "ftb-debug_signed.zip" --key "./apple_api_key.p8" --key-id ${{ secrets.APPLE_API_KEY_ID }} --issuer ${{ secrets.APPLE_API_ISSUER }} --wait

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ftb-debug-${{ matrix.goos }}-${{ matrix.goarch }}
          overwrite: true
          path: |
            out/*