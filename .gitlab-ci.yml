# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Go.gitlab-ci.yml

image: golang:1.19-alpine

variables:
  # Please edit to your GitLab project
  REPO_NAME: git.ftb.dev/Jake_Evans/ftb-debug

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - build
  - deploy

.build:
  stage: build
  script:
    - echo "-ldflags \"-X 'main.GitCommit=$CI_COMMIT_SHORT_SHA' $EXTRA_FLAGS\""
    - go build -ldflags "-X 'main.GitCommit=$CI_COMMIT_SHORT_SHA' $EXTRA_FLAGS" -o $CI_PROJECT_DIR/ftb-debug$FILE_OUTPUT
  artifacts:
    paths:
      - ftb-debug$FILE_OUTPUT
    expire_in: 1 day

build linux:
  extends: .build
  variables:
    CGO_ENABLED: 0
    GOOS: linux
    FILE_OUTPUT: "-linux"
    EXTRA_FLAGS: "-extldflags '-static'"

build linuxArm:
  extends: .build
  variables:
    CGO_ENABLED: 0
    GOOS: linux
    GOARCH: arm64
    FILE_OUTPUT: "-linux-arm"
    # EXTRA_FLAGS: "-linkmode external -extldflags '-static'"

build windows:
  extends: .build
  variables:
    CGO_ENABLED: 0
    GOOS: windows
    FILE_OUTPUT: ".exe"

build windowsArm:
  extends: .build
  variables:
    CGO_ENABLED: 0
    GOOS: windows
    GOARCH: arm64
    FILE_OUTPUT: "-arm64.exe"

build macos:
  extends: .build
  variables:
    CGO_ENABLED: 0
    GOOS: darwin
    FILE_OUTPUT: "macos"

build macos-m1:
  extends: .build
  variables:
    CGO_ENABLED: 0
    GOOS: darwin
    GOARCH: arm64
    FILE_OUTPUT: "macos-arm64"